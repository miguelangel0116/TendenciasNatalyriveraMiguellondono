from .typeValidator import *
import services.HumanResourcesService as HumanResourcesService
import services.PersonalAdminService as PersonalAdminService
def createUser(Hos,rol):
    name=input("ingrese nombre del " + rol)
    textValidator(name,"nombre de " + rol)
    id=numberValidator(input("ingrese la cedula de " + rol), "cedula de " + rol)
    userName=input("ingrese usuario del " + rol)
    textValidator(name,"usuario de " + rol)
    age=numberValidator(input("ingrese la cedula de " + rol), "cedula de " + rol)
    password=input("ingrese contraseña del " + rol)
    textValidator(name,"contraseña de " + rol)
    email=input("ingrese correo electronico del " + rol)
    textValidator(name,"correo electronico de " + rol)
    phone=input("ingrese numero de telefono del " + rol)
    textValidator(name,"numero telefono de " + rol)
    birthDate=input("ingrese Fecha de nacimiento del " + rol)
    textValidator(name,"fecha de nacimiento de " + rol)
    address=input("ingrese direccion del " + rol)
    textValidator(name,"direccion de " + rol)
    HumanResourcesService.createUser(Hos,id,name,age,rol,userName,password,email,phone,birthDate,address)

def createPatient(Hos,rol="Paciente"):
    name=input("ingrese nombre del " + rol)
    textValidator(name,"nombre de " + rol)
    id=numberValidator(input("ingrese la cedula de " + rol), "cedula de " + rol)
    birthDate=input("ingrese Fecha de nacimiento del " + rol)
    textValidator(name,"fecha de nacimiento de " + rol)
    gender=input("ingrese genero del " + rol)
    textValidator(name,"genero de " + rol)
    address=input("ingrese direccion del " + rol)
    textValidator(name,"direccion de " + rol)
    phone=input("ingrese numero de telefono del " + rol)
    textValidator(name,"numero telefono de " + rol)
    email=input("ingrese correo electronico del " + rol)
    textValidator(name,"correo electronico de " + rol)
    name=input("ingrese nombre del acompañante " + rol)
    textValidator(name,"nombre del acompañante " + rol)
    relationship=input("ingrese relacion del acompañante " + rol)
    textValidator(name,"relacion del acompañante " + rol)
    phone=input("ingrese numero de emergencia del " + rol)
    textValidator(name,"numero emergencia de " + rol)
    insurance=input("ingrese compañia de seguros " + rol)
    textValidator(name,"compañia de seguros " + rol)
    policyNumber=input("ingrese numero de poliza del " + rol)
    textValidator(name,"numero poliza de " + rol)
    statePolicy=input("ingrese estado de poliza " + rol)
    textValidator(name,"estado de poliza " + rol)
    policyValidity=input("ingrese vigencia de poliza " + rol)
    textValidator(name,"vigencia de poliza " + rol)
    PersonalAdminService.createUser(Hos,id,name,rol,birthDate,gender,address,phone,email,relationship,insurance,policyNumber,statePolicy,policyValidity)